networks:
  db:
    driver: bridge
  cache:
    driver: bridge
  messaging:
    driver: bridge
  app:
    driver: bridge

volumes:
  restaurant_db:
  kafka_data:
  redis_cache:

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4173:4173"
    networks:
      - app
    depends_on:
      - backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - app
      - db
      - cache
      - messaging
    depends_on:
      - postgres
      - redis
      - kafka
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_USER=bonrecreme
      - POSTGRES_PASSWORD=bonrecremepassword
    ports:
      - "5432:5432"
    networks:
      - db
    volumes:
      - restaurant_db:/var/lib/postgresql/data
      - ./docker/database/init_db.sql:/docker-entrypoint-initdb.d/init.sql
  redis:
    image: 'redis:latest'
    expose:
      - "6379"
    volumes:
      - redis_cache:/cache
    networks:
      - cache
  kafka:
    image: docker.io/bitnami/kafka:3.4
    hostname: kafka
    expose:
      - "9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # ------ Listener Configuration ------
      - KAFKA_CFG_LISTENERS=EXTERNAL://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=EXTERNAL://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=EXTERNAL

      # ------ KRaft Settings ------
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093

      # ------ Other Settings ------
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_NUM_PARTITIONS=2
    networks:
      - messaging
